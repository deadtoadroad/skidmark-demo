{"jsonClass":"PostCreated","id":"1235048b-1a27-4722-848f-1a74feec8132","version":0,"title":"Demo Post","author":"deadtoadroad","tags":["demo","skidmark","scala"],"text":"Skidmark is a blog API that:\n\n* Records state in a [Git](https://git-scm.com) based event store, locally and off-server.\n* Reactively maintains blog files, which by default are [Markdown](https://daringfireball.net/projects/markdown/) files in a Git repository for publishing on Git hosting services like [GitHub](https://github.com).\n\nThis post demonstrates usage of Skidmark. To read more about Skidmark itself, visit the [project](https://github.com/deadtoadroad/skidmark#readme).\n\n## Setup\n\nFirst, clone the [Skidmark](https://github.com/deadtoadroad/skidmark) repository and run the project from the root directory using [the Scala build tool or a compatible IDE](https://www.scala-lang.org/download/).\n\n```bash\nsbt run\n```\n\nThis will start the API which will listen on http://localhost:8080 by default and will also create a sibling repository at `../skidmark-demo` in which to record state and generate Markdown files.\n\nThere are some tools that may be useful in following along with the demo:\n\n* [HTTPie](https://httpie.org) (although curl or another REST client will also do)\n\nIt's also recommended to create a repository on GitHub and push the `skidmark-demo` repository there after each step to see the published result. At the end of this demo the repository will be almost identical to https://github.com/deadtoadroad/skidmark-demo.\n\n## Create a Post\n\nCreate the demo post and give it published status.\n\n```bash\nhttp post :8080/post \\\n  id=1235048b-1a27-4722-848f-1a74feec8132 \\\n  title='Demo Post' \\\n  author=deadtoadroad \\\n  tags:='[\"demo\", \"skidmark\", \"scala\"]' \\\n  text=@demo/demo-post.md\n\nhttp put :8080/post/publish \\\n  id=1235048b-1a27-4722-848f-1a74feec8132 \\\n  version=0 \\\n  publishedOn=2018-12-17T00:00:00.000+11:00[Australia/Sydney]\n```\n\n*The `id` field in the create commands is optional; if it's not provided the API will generate one instead. One is specified here to make scripting easier.*\n\nThe demo post will now be visible in the following locations:\n\n* [/readme.md](/readme.md#readme)\n* [/posts/2018/12/demo-post/readme.md](/posts/2018/12/demo-post/readme.md#readme)\n\nEach published post gets its own location with the most recent one also displayed on the home page.\n\n## Hello World\n\nCreate another post, this time a \"Hello World\" post with an earlier publish date.\n\n```bash\nhttp post :8080/post \\\n  id=c5d38190-f6bf-481b-bbe4-da40f0be3462 \\\n  title='Hello World' \\\n  author=deadtoadroad \\\n  tags:='[\"hello-world\", \"skidmark\", \"scala\"]' \\\n  text=@demo/hello-world.md\n\nhttp put :8080/post/publish \\\n  id=c5d38190-f6bf-481b-bbe4-da40f0be3462 \\\n  version=0 \\\n  publishedOn=2018-12-16T00:00:00.000+11:00[Australia/Sydney]\n```\n\nThe [home page](/readme.md#readme) still shows the demo post as it has the most recent published date, but this time there is also a link in the header and footer to the earlier \"Hello World\" post:\n\n* [/posts/2018/12/hello-world/readme.md](/posts/2018/12/hello-world/readme.md#readme)\n\nFor Skidmark to generate these Markdown files, it uses an [event store](/_es/_all) embedded in the Git repo to record state. To illustrate, unpublish the \"Hello World\" post.\n\n```bash\nhttp put :8080/post/unpublish \\\n  id=c5d38190-f6bf-481b-bbe4-da40f0be3462 \\\n  version=1\n```\n\nThe unpublish command generated an event the blog writer was listening for and reacted to by unpublishing the \"Hello World\" post. On its own the unpublish event doesn't have enough information to determine the path of the file to delete, but by using the [event store](/_es/_all) and the derived [query database](/_db), Skidmark can figure it out. The \"Hello World\" post is now gone.\n\nBring back the \"Hello World\" post with another publish command.\n\n```bash\nhttp put :8080/post/publish \\\n  id=c5d38190-f6bf-481b-bbe4-da40f0be3462 \\\n  version=2 \\\n  publishedOn=2018-12-16T00:00:00.000+11:00[Australia/Sydney]\n```\n\n## Create a Comment\n\nCreate a comment on the \"Hello World\" post.\n\n```bash\nhttp post :8080/comment \\\n  id=b9d9aa34-7588-4f71-a72a-deb4a664da32 \\\n  postId=c5d38190-f6bf-481b-bbe4-da40f0be3462 \\\n  author=anon \\\n  text='Nice, but it needs more sparkles.'\n\nhttp put :8080/admin/comment/vet \\\n  id=b9d9aa34-7588-4f71-a72a-deb4a664da32 \\\n  version=0\n```\n\nThe comment is asking for more sparkles. How could anyone say no?\n\n```bash\ncat demo/hello-world.md | \\\n  sed 's/:sparkles:$/:sparkles:<br\\/>/' | \\\n  cat - demo/more-sparkles.md > \\\n  demo/hello-world-with-more-sparkles.md\n\nhttp put :8080/post \\\n  id=c5d38190-f6bf-481b-bbe4-da40f0be3462 \\\n  version=3 \\\n  text=@demo/hello-world-with-more-sparkles.md\n\nhttp post :8080/comment \\\n  id=62bc0151-b668-4795-b110-2941d0bf711b \\\n  postId=c5d38190-f6bf-481b-bbe4-da40f0be3462 \\\n  author=deadtoadroad \\\n  text='There you go.'\n\nhttp put :8080/admin/comment/vet \\\n  id=62bc0151-b668-4795-b110-2941d0bf711b \\\n  version=0\n\nhttp post :8080/comment \\\n  id=086125de-0f2d-49c4-b2d8-e362cf1ff508 \\\n  postId=c5d38190-f6bf-481b-bbe4-da40f0be3462 \\\n  author=anon \\\n  text='Great, thanks.'\n\nhttp put :8080/admin/comment/vet \\\n  id=086125de-0f2d-49c4-b2d8-e362cf1ff508 \\\n  version=0\n```\n\nCheck out [Skidmark](https://github.com/deadtoadroad/skidmark#readme) to read more.\n","createdOn":"2018-12-19T15:35:13.543+11:00[Australia/Sydney]"}
{"jsonClass":"PostPublished","id":"1235048b-1a27-4722-848f-1a74feec8132","version":1,"publishedOn":"2018-12-17T00:00+11:00[Australia/Sydney]","updatedOn":"2018-12-19T15:35:15.457+11:00[Australia/Sydney]"}
{"jsonClass":"PostCreated","id":"c5d38190-f6bf-481b-bbe4-da40f0be3462","version":0,"title":"Hello World","author":"deadtoadroad","tags":["hello-world","skidmark","scala"],"text":"The obligatory \"Hello World\" post.\n\nBesides regular Markdown stuff like...\n\n## Headings\n\nAnd lists:\n\n* Oranges\n* Apples\n* Bananas\n\n[GitHub Flavored Markdown](https://guides.github.com/features/mastering-markdown/#GitHub-flavored-markdown) also provides a few more features...\n\nThings like task lists:\n\n* [ ] Oranges\n* [x] Apples\n* [ ] Bananas\n\nTables:\n\nFruit | Check\n----- | -----\nOranges |\nApples | :heavy_check_mark:\nBananas |\n\nAnd code blocks with syntax highlighting:\n\n```JavaScript\nfunction check(fruit) {\n  list[fruit] = true;\n}\n```\n\nAlso, sparkles.\n\n:sparkles: :sparkles: :sparkles: :sparkles: :sparkles:\n","createdOn":"2018-12-19T15:35:36.111+11:00[Australia/Sydney]"}
{"jsonClass":"PostPublished","id":"c5d38190-f6bf-481b-bbe4-da40f0be3462","version":1,"publishedOn":"2018-12-16T00:00+11:00[Australia/Sydney]","updatedOn":"2018-12-19T15:35:36.623+11:00[Australia/Sydney]"}
{"jsonClass":"PostUnpublished","id":"c5d38190-f6bf-481b-bbe4-da40f0be3462","version":2,"updatedOn":"2018-12-19T15:35:47.331+11:00[Australia/Sydney]"}
{"jsonClass":"PostPublished","id":"c5d38190-f6bf-481b-bbe4-da40f0be3462","version":3,"publishedOn":"2018-12-16T00:00+11:00[Australia/Sydney]","updatedOn":"2018-12-19T15:35:56.453+11:00[Australia/Sydney]"}
{"jsonClass":"CommentCreated","id":"b9d9aa34-7588-4f71-a72a-deb4a664da32","version":0,"postId":"c5d38190-f6bf-481b-bbe4-da40f0be3462","author":"anon","text":"Nice, but it needs more sparkles.","createdOn":"2018-12-19T15:36:07.311+11:00[Australia/Sydney]"}
{"jsonClass":"CommentVetted","id":"b9d9aa34-7588-4f71-a72a-deb4a664da32","version":1,"vettedOn":"2018-12-19T15:36:07.914+11:00[Australia/Sydney]","updatedOn":"2018-12-19T15:36:07.915+11:00[Australia/Sydney]"}
